{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "VARIO REST-API",
    "version" : "1"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "paths" : {
    "/aufgabenplaner/aufgaben" : {
      "get" : {
        "tags" : [ "Aufgabenplanung" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "/aufgabenplaner/aufgaben/{aufgaben_id}" : {
      "get" : {
        "tags" : [ "Aufgabenplanung" ],
        "parameters" : [ {
          "name" : "aufgaben_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        }
      }
    },
    "/aufgabenplaner/status" : {
      "get" : {
        "tags" : [ "Aufgabenplanung" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Aufgabenplanung" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/auswertungen/auftragsrueckstaende" : {
      "get" : {
        "tags" : [ "Auswertungen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lagerkreisId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "datumVon",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "datumBis",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/auswertungen/bestellrueckstaende" : {
      "get" : {
        "tags" : [ "Auswertungen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "belegdatumVon",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "belegdatumBis",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "fixdatumVon",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "fixdatumBis",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "lieferantennummerVon",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lieferantennummerBis",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artikelnummerVon",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artikelnummerBis",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lagerkreisId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/auswertungen/geburtstage" : {
      "get" : {
        "tags" : [ "Auswertungen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "geburtstagVonHauptadresse",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "tagVon",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "monatVon",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "tagBis",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "monatBis",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/auswertungen/rennerpenner" : {
      "get" : {
        "tags" : [ "Auswertungen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "top",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "datumVon",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "datumBis",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "mitRabatt",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "mitVersand",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/auswertungen/sql" : {
      "post" : {
        "tags" : [ "Auswertungen" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          }
        }
      }
    },
    "/auswertungen/umsatzstatistik" : {
      "get" : {
        "tags" : [ "Auswertungen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/login" : {
      "get" : {
        "tags" : [ "Login" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/adressen" : {
      "get" : {
        "tags" : [ "Adressen" ],
        "description" : "<h2>Adresse suchen</h2>",
        "operationId" : "GetAdresseList",
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Adressen" ],
        "description" : "<h2>Adresse anlegen</h2>",
        "operationId" : "PostAdresse",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_2"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/adressen/{adressen_id}" : {
      "get" : {
        "tags" : [ "Adressen" ],
        "description" : "<h2>Adresse anzeigen</h2>",
        "operationId" : "GetAdresse",
        "parameters" : [ {
          "name" : "adressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Adressen" ],
        "description" : "<h2>Adresse löschen</h2>",
        "operationId" : "DeleteAdresse",
        "parameters" : [ {
          "name" : "adressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Adressen" ],
        "description" : "<h2>Adresse ändern</h2>",
        "operationId" : "PatchAdresse",
        "parameters" : [ {
          "name" : "adressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_3"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/adressen/{adressen_id}/zusatzadressen" : {
      "get" : {
        "tags" : [ "Adressen" ],
        "parameters" : [ {
          "name" : "adressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Adressen" ],
        "parameters" : [ {
          "name" : "adressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_4"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/adressen/{adressen_id}/zusatzadressen/{zusatzadressen_id}" : {
      "get" : {
        "tags" : [ "Adressen" ],
        "parameters" : [ {
          "name" : "adressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "zusatzadressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Adressen" ],
        "parameters" : [ {
          "name" : "adressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "zusatzadressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Adressen" ],
        "parameters" : [ {
          "name" : "adressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "zusatzadressen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_5"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/aktivitaeten" : {
      "get" : {
        "tags" : [ "Aktivitäten" ],
        "description" : "<h2>Aktivität suchen</h2>",
        "operationId" : "GetAktivitaetenList",
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Aktivitäten" ],
        "description" : "<h2>Aktivität anlegen</h2>",
        "operationId" : "PostAktivitaet",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_6"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/aktivitaeten/{aktivitaeten_id}" : {
      "get" : {
        "tags" : [ "Aktivitäten" ],
        "description" : "<h2>Aktivität anzeigen</h2>",
        "operationId" : "GetAktivitaet",
        "parameters" : [ {
          "name" : "aktivitaeten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_10"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Aktivitäten" ],
        "description" : "<h2>Aktivität löschen</h2>",
        "operationId" : "DeleteAktivitaet",
        "parameters" : [ {
          "name" : "aktivitaeten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Aktivitäten" ],
        "description" : "<h2>Aktivität ändern</h2>",
        "operationId" : "PatchAktivitaet",
        "parameters" : [ {
          "name" : "aktivitaeten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_7"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/ansprechpartner" : {
      "get" : {
        "tags" : [ "Ansprechpartner" ],
        "description" : "<h2>Ansprechpartner suchen</h2>",
        "operationId" : "GetAnsprechpartnerList",
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Ansprechpartner" ],
        "description" : "<h2>Ansprechpartner anlegen</h2>",
        "operationId" : "PostAnsprechpartner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_8"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/ansprechpartner/{ansprechpartner_id}" : {
      "get" : {
        "tags" : [ "Ansprechpartner" ],
        "description" : "<h2>Ansprechpartner anzeigen</h2>",
        "operationId" : "GetAnsprechpartner",
        "parameters" : [ {
          "name" : "ansprechpartner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_12"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Ansprechpartner" ],
        "description" : "<h2>Ansprechpartner löschen</h2>",
        "operationId" : "DeleteAnsprechpartner",
        "parameters" : [ {
          "name" : "ansprechpartner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Ansprechpartner" ],
        "description" : "<h2>Ansprechpartner ändern</h2>",
        "operationId" : "PatchAnsprechpartner",
        "parameters" : [ {
          "name" : "ansprechpartner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_9"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/ansprechpartner/{ansprechpartner_id}/abos" : {
      "get" : {
        "tags" : [ "Ansprechpartner" ],
        "parameters" : [ {
          "name" : "ansprechpartner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Ansprechpartner" ],
        "parameters" : [ {
          "name" : "ansprechpartner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_10"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/ansprechpartner/{ansprechpartner_id}/abos/{abos_id}" : {
      "get" : {
        "tags" : [ "Ansprechpartner" ],
        "parameters" : [ {
          "name" : "ansprechpartner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "abos_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Ansprechpartner" ],
        "parameters" : [ {
          "name" : "ansprechpartner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "abos_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Ansprechpartner" ],
        "parameters" : [ {
          "name" : "ansprechpartner_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "abos_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_11"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/artikel" : {
      "get" : {
        "tags" : [ "Artikel" ],
        "description" : "<h2>Artikel suchen</h2>",
        "operationId" : "GetArtikelList",
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Artikel" ],
        "description" : "<h2>Artikel anlegen</h2>",
        "operationId" : "PostArtikel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_12"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/artikel/{artikel_id}" : {
      "get" : {
        "tags" : [ "Artikel" ],
        "description" : "<h2>Artikel anzeigen</h2>",
        "operationId" : "GetArtikel",
        "parameters" : [ {
          "name" : "artikel_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_16"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Artikel" ],
        "description" : "<h2>Artikel löschen</h2>",
        "operationId" : "DeleteArtikel",
        "parameters" : [ {
          "name" : "artikel_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Artikel" ],
        "description" : "<h2>Artikel ändern</h2>",
        "operationId" : "PatchArtikel",
        "parameters" : [ {
          "name" : "artikel_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_13"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/assets" : {
      "get" : {
        "tags" : [ "Assets" ],
        "description" : "<h2>Artikel suchen</h2>",
        "operationId" : "GetArtikelList",
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assets" ],
        "description" : "<h2>Artikel anlegen</h2>",
        "operationId" : "PostArtikel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_14"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/assets/{assets_id}" : {
      "get" : {
        "tags" : [ "Assets" ],
        "description" : "<h2>Artikel anzeigen</h2>",
        "operationId" : "GetArtikel",
        "parameters" : [ {
          "name" : "assets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Assets" ],
        "description" : "<h2>Artikel löschen</h2>",
        "operationId" : "DeleteArtikel",
        "parameters" : [ {
          "name" : "assets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Assets" ],
        "description" : "<h2>Artikel ändern</h2>",
        "operationId" : "PatchArtikel",
        "parameters" : [ {
          "name" : "assets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_15"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/belegarten" : {
      "get" : {
        "tags" : [ "Belegarten" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_19"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/belegarten/{belegarten_id}" : {
      "get" : {
        "tags" : [ "Belegarten" ],
        "parameters" : [ {
          "name" : "belegarten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_20"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/belege" : {
      "get" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleg suchen</h2>",
        "operationId" : "GetBelegList",
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleg anlegen</h2>",
        "operationId" : "PostBeleg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_16"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/belege/{belege_id}" : {
      "get" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleg anzeigen</h2>",
        "operationId" : "GetBeleg",
        "parameters" : [ {
          "name" : "belege_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleg löschen</h2>",
        "operationId" : "DeleteBeleg",
        "parameters" : [ {
          "name" : "belege_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleg ändern</h2>",
        "operationId" : "PatchBeleg",
        "parameters" : [ {
          "name" : "belege_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_17"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/belege/{belege_id}/buchen" : {
      "post" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleg buchen</h2>",
        "operationId" : "BelegBuchen",
        "parameters" : [ {
          "name" : "belege_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/belege/{belege_id}/historie" : {
      "get" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleghistorie anzeigen</h2>",
        "operationId" : "GetBelegHistorieList",
        "parameters" : [ {
          "name" : "belege_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/belege/{belege_id}/historie/{historie_id}" : {
      "get" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleghistorieneintrag anzeigen</h2>",
        "operationId" : "GetBelegHistorie",
        "parameters" : [ {
          "name" : "belege_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "historie_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/belege/{belege_id}/simulation" : {
      "post" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleganlage simulieren</h2>",
        "operationId" : "TryPostBeleg",
        "parameters" : [ {
          "name" : "belege_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_18"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/belege/{belege_id}/stornieren" : {
      "post" : {
        "tags" : [ "Belege" ],
        "description" : "<h2>Beleg stornieren</h2>",
        "operationId" : "BelegStornieren",
        "parameters" : [ {
          "name" : "belege_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/benutzer" : {
      "get" : {
        "tags" : [ "Benutzer" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/benutzer/{benutzer_id}" : {
      "get" : {
        "tags" : [ "Benutzer" ],
        "parameters" : [ {
          "name" : "benutzer_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/bestaende" : {
      "get" : {
        "tags" : [ "Bestände" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/bestaende/{bestaende_id}" : {
      "get" : {
        "tags" : [ "Bestände" ],
        "parameters" : [ {
          "name" : "bestaende_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/bestellungen" : {
      "get" : {
        "tags" : [ "Bestellungen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Bestellungen" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_19"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/bestellungen/{bestellungen_id}" : {
      "get" : {
        "tags" : [ "Bestellungen" ],
        "parameters" : [ {
          "name" : "bestellungen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_30"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Bestellungen" ],
        "parameters" : [ {
          "name" : "bestellungen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Bestellungen" ],
        "parameters" : [ {
          "name" : "bestellungen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_20"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/bilder" : {
      "get" : {
        "tags" : [ "Bilder" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_31"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/bilder/{bilder_id}" : {
      "get" : {
        "tags" : [ "Bilder" ],
        "parameters" : [ {
          "name" : "bilder_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_32"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/bilder/{bilder_id}/gfx" : {
      "get" : {
        "tags" : [ "Bilder" ],
        "parameters" : [ {
          "name" : "bilder_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "image" : { }
            }
          }
        }
      }
    },
    "/stammdaten/chancen" : {
      "get" : {
        "tags" : [ "Chancen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Chancen" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_21"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/chancen/{chancen_id}" : {
      "get" : {
        "tags" : [ "Chancen" ],
        "parameters" : [ {
          "name" : "chancen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_34"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Chancen" ],
        "parameters" : [ {
          "name" : "chancen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Chancen" ],
        "parameters" : [ {
          "name" : "chancen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_22"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/dateien" : {
      "get" : {
        "tags" : [ "Dateien" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_35"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Dateien" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_23"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/dateien/{dateien_id}" : {
      "get" : {
        "tags" : [ "Dateien" ],
        "parameters" : [ {
          "name" : "dateien_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_36"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Dateien" ],
        "parameters" : [ {
          "name" : "dateien_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Dateien" ],
        "parameters" : [ {
          "name" : "dateien_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_24"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/dateien/{dateien_id}/daten" : {
      "get" : {
        "tags" : [ "Dateien" ],
        "parameters" : [ {
          "name" : "dateien_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/octet-stream" : { }
            }
          }
        }
      }
    },
    "/stammdaten/deals" : {
      "get" : {
        "tags" : [ "Deals" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_37"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Deals" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_25"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/deals/{deals_id}" : {
      "get" : {
        "tags" : [ "Deals" ],
        "parameters" : [ {
          "name" : "deals_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_38"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Deals" ],
        "parameters" : [ {
          "name" : "deals_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Deals" ],
        "parameters" : [ {
          "name" : "deals_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_26"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/lager" : {
      "get" : {
        "tags" : [ "Lager" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_39"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/lager/{lager_id}" : {
      "get" : {
        "tags" : [ "Lager" ],
        "parameters" : [ {
          "name" : "lager_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_40"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/lagerkreise" : {
      "get" : {
        "tags" : [ "Lagerkreise" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_41"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/lagerkreise/{lagerkreise_id}" : {
      "get" : {
        "tags" : [ "Lagerkreise" ],
        "parameters" : [ {
          "name" : "lagerkreise_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_42"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/lieferbedingungen" : {
      "get" : {
        "tags" : [ "Lieferbedingungen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_43"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/lieferbedingungen/{lieferbedingungen_id}" : {
      "get" : {
        "tags" : [ "Lieferbedingungen" ],
        "parameters" : [ {
          "name" : "lieferbedingungen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_44"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/newsletter/{newsletter_id}/kategorien" : {
      "get" : {
        "tags" : [ "Newsletter" ],
        "parameters" : [ {
          "name" : "newsletter_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_45"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/newsletter/{newsletter_id}/kategorien/{kategorien_id}" : {
      "get" : {
        "tags" : [ "Newsletter" ],
        "parameters" : [ {
          "name" : "newsletter_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "kategorien_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_46"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/offeneposten" : {
      "get" : {
        "tags" : [ "Offene Posten" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_47"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/offeneposten/{offeneposten_id}" : {
      "get" : {
        "tags" : [ "Offene Posten" ],
        "parameters" : [ {
          "name" : "offeneposten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_48"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/offeneposten/{offeneposten_id}/zahlungen" : {
      "get" : {
        "tags" : [ "Offene Posten" ],
        "parameters" : [ {
          "name" : "offeneposten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_49"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/offeneposten/{offeneposten_id}/zahlungen/{zahlungen_id}" : {
      "get" : {
        "tags" : [ "Offene Posten" ],
        "parameters" : [ {
          "name" : "offeneposten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "zahlungen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_50"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/preise" : {
      "get" : {
        "tags" : [ "Preise" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_51"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/preise/{preise_id}" : {
      "get" : {
        "tags" : [ "Preise" ],
        "parameters" : [ {
          "name" : "preise_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_52"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/preisgruppen" : {
      "get" : {
        "tags" : [ "Preisgruppen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_45"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/preisgruppen/{preisgruppen_id}" : {
      "get" : {
        "tags" : [ "Preisgruppen" ],
        "parameters" : [ {
          "name" : "preisgruppen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_46"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/service" : {
      "get" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_53"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Service" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_27"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/service/{service_id}" : {
      "get" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "service_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_54"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "service_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "service_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_28"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/service/{service_id}/abbrechen" : {
      "post" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "service_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_29"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/service/{service_id}/abschliessen" : {
      "post" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "service_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_30"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/service/{service_id}/unterbrechen" : {
      "post" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "service_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_31"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/service-abrechnungsarten" : {
      "get" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_55"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/service-abrechnungsarten/{service-abrechnungsarten_id}" : {
      "get" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "service-abrechnungsarten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_56"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/service-auftragsarten" : {
      "get" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_57"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/service-auftragsarten/{service-auftragsarten_id}" : {
      "get" : {
        "tags" : [ "Service" ],
        "parameters" : [ {
          "name" : "service-auftragsarten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_58"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/techniker" : {
      "get" : {
        "tags" : [ "Techniker" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_59"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Techniker" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_32"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/techniker/{techniker_id}" : {
      "get" : {
        "tags" : [ "Techniker" ],
        "parameters" : [ {
          "name" : "techniker_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_60"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Techniker" ],
        "parameters" : [ {
          "name" : "techniker_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Techniker" ],
        "parameters" : [ {
          "name" : "techniker_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_33"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/termine" : {
      "get" : {
        "tags" : [ "Termine" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_61"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Termine" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_34"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/termine/{termine_id}" : {
      "get" : {
        "tags" : [ "Termine" ],
        "parameters" : [ {
          "name" : "termine_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_62"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Termine" ],
        "parameters" : [ {
          "name" : "termine_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Termine" ],
        "parameters" : [ {
          "name" : "termine_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_35"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/termine/{termine_id}/ablehnen" : {
      "post" : {
        "tags" : [ "Termine" ],
        "parameters" : [ {
          "name" : "termine_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_36"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/termine/{termine_id}/annehmen" : {
      "post" : {
        "tags" : [ "Termine" ],
        "parameters" : [ {
          "name" : "termine_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/tickets" : {
      "get" : {
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_63"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Tickets" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_37"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/tickets/{tickets_id}" : {
      "get" : {
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "tickets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_64"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "tickets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "tickets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_38"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/tickets/{tickets_id}/anhaenge" : {
      "get" : {
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "tickets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_35"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "tickets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_39"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/stammdaten/tickets/{tickets_id}/anhaenge/{anhaenge_id}" : {
      "get" : {
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "tickets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "anhaenge_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_36"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "tickets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "anhaenge_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "Tickets" ],
        "parameters" : [ {
          "name" : "tickets_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "anhaenge_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_40"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/stammdaten/vertreter" : {
      "get" : {
        "tags" : [ "Vertreter" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_65"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/vertreter/{vertreter_id}" : {
      "get" : {
        "tags" : [ "Vertreter" ],
        "parameters" : [ {
          "name" : "vertreter_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_66"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/warengruppen" : {
      "get" : {
        "tags" : [ "Warengruppen" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_67"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/warengruppen/{warengruppen_id}" : {
      "get" : {
        "tags" : [ "Warengruppen" ],
        "parameters" : [ {
          "name" : "warengruppen_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_68"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/zahlungsarten" : {
      "get" : {
        "tags" : [ "Zahlungsarten" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_69"
                }
              }
            }
          }
        }
      }
    },
    "/stammdaten/zahlungsarten/{zahlungsarten_id}" : {
      "get" : {
        "tags" : [ "Zahlungsarten" ],
        "parameters" : [ {
          "name" : "zahlungsarten_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_70"
                }
              }
            }
          }
        }
      }
    },
    "/verwaltung/log" : {
      "get" : {
        "tags" : [ "Log" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Volltextsuche<br>Funktioniert nur bei Datenmengen die in der VARIO 8 Anwendung auch eine Volltextsuche unterstützen.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Überspringt die ersten [offset] Datensätze in der gesamten Datenmenge<br>Default: 0",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximale Anzahl an zurückgelieferten Datensätze pro Response<br>Default: 20",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Eine Kommagetrennte Liste von Filterausdrücken.<br>Grundlegende Syntax: [Feld][Operator][Wert]<br>Gültige Operatoren:<br>= (Gleich)<br>! (Ungleich)<br>> (Größer)<br>< (Kleiner)<br>* (Beginnt mit)<br>? (Enthält)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sortierung nach Feldern durch Komma getrennte Liste von Feldnamen.<br>Ein Minus (-) for einem Feldnamen bewirkt eine absteigende Sortierung.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_71"
                }
              }
            }
          }
        }
      }
    },
    "/verwaltung/parameter" : {
      "get" : {
        "tags" : [ "Parameter" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_72"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Parameter" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_41"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      },
      "delete" : {
        "tags" : [ "Parameter" ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/verwaltung/wartung" : {
      "get" : {
        "tags" : [ "Wartung" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Veraltet. Wird nicht genutzt.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Kommagetrennte Liste aller Feldnamen die in der Response enthalten sein sollen<br>Die Response enthält alle verfügbaren Felder, falls dieser Parameter nicht angegeben wird.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_73"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Wartung" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_42"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "inline_response_200_result" : {
        "type" : "object",
        "properties" : {
          "typ" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer"
          },
          "priority" : {
            "type" : "integer"
          },
          "state" : {
            "type" : "string"
          },
          "nextExecution" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_result"
            }
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_result"
          }
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          }
        }
      },
      "body_1" : {
        "type" : "object",
        "properties" : {
          "sql" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "result" : { }
        }
      },
      "inline_response_200_4" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_5_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adressnummer" : {
            "type" : "integer"
          },
          "name1" : {
            "type" : "string"
          },
          "name2" : {
            "type" : "string"
          },
          "name3" : {
            "type" : "string"
          },
          "kurzname" : {
            "type" : "string"
          },
          "strasse" : {
            "type" : "string"
          },
          "ort" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "istKunde" : {
            "type" : "boolean"
          },
          "istLieferant" : {
            "type" : "boolean"
          },
          "vertreter1" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_5" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_5_result"
            }
          }
        }
      },
      "stammdatenadressen_data" : {
        "type" : "object",
        "properties" : {
          "matchCode" : {
            "type" : "string"
          },
          "anrede" : {
            "type" : "string"
          },
          "name1" : {
            "type" : "string"
          },
          "name2" : {
            "type" : "string"
          },
          "name3" : {
            "type" : "string"
          },
          "kurzname" : {
            "type" : "string"
          },
          "strasse" : {
            "type" : "string"
          },
          "lkz" : {
            "type" : "string"
          },
          "plz" : {
            "type" : "string"
          },
          "ort" : {
            "type" : "string"
          },
          "telefon1" : {
            "type" : "string"
          },
          "telefon2" : {
            "type" : "string"
          },
          "telefax1" : {
            "type" : "string"
          },
          "mobil" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "webseite" : {
            "type" : "string"
          },
          "istKunde" : {
            "type" : "boolean"
          },
          "istLieferant" : {
            "type" : "boolean"
          },
          "vertreter1" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "preisgruppe" : {
            "type" : "integer"
          },
          "liefersperre" : {
            "type" : "boolean"
          },
          "kreditlimit" : {
            "type" : "number"
          },
          "erstkontakt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "erstkontaktBemerkung" : {
            "type" : "string"
          },
          "zustaendigerMitarbeiterBenutzerId" : {
            "type" : "integer"
          },
          "abcKennung" : {
            "type" : "string"
          },
          "s01" : {
            "type" : "string"
          },
          "s02" : {
            "type" : "string"
          },
          "s03" : {
            "type" : "string"
          },
          "s04" : {
            "type" : "string"
          },
          "s05" : {
            "type" : "string"
          },
          "s06" : {
            "type" : "string"
          },
          "s07" : {
            "type" : "string"
          },
          "s08" : {
            "type" : "string"
          },
          "s09" : {
            "type" : "string"
          },
          "s10" : {
            "type" : "string"
          }
        }
      },
      "body_2" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenadressen_data"
          }
        }
      },
      "inline_response_200_6_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adressnummer" : {
            "type" : "integer"
          },
          "matchCode" : {
            "type" : "string"
          },
          "anrede" : {
            "type" : "string"
          },
          "name1" : {
            "type" : "string"
          },
          "name2" : {
            "type" : "string"
          },
          "name3" : {
            "type" : "string"
          },
          "kurzname" : {
            "type" : "string"
          },
          "strasse" : {
            "type" : "string"
          },
          "lkz" : {
            "type" : "string"
          },
          "plz" : {
            "type" : "string"
          },
          "ort" : {
            "type" : "string"
          },
          "telefon1" : {
            "type" : "string"
          },
          "telefon2" : {
            "type" : "string"
          },
          "telefax1" : {
            "type" : "string"
          },
          "mobil" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "webseite" : {
            "type" : "string"
          },
          "istKunde" : {
            "type" : "boolean"
          },
          "kundennummer" : {
            "type" : "string"
          },
          "istLieferant" : {
            "type" : "boolean"
          },
          "lieferantennummer" : {
            "type" : "string"
          },
          "vertreter1" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "preisgruppe" : {
            "type" : "integer"
          },
          "liefersperre" : {
            "type" : "boolean"
          },
          "kreditlimit" : {
            "type" : "number"
          },
          "opvBetrag" : {
            "type" : "number"
          },
          "erstkontakt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "erstkontaktBemerkung" : {
            "type" : "string"
          },
          "zustaendigerMitarbeiterBenutzerId" : {
            "type" : "integer"
          },
          "abcKennung" : {
            "type" : "string"
          },
          "s01" : {
            "type" : "string"
          },
          "s02" : {
            "type" : "string"
          },
          "s03" : {
            "type" : "string"
          },
          "s04" : {
            "type" : "string"
          },
          "s05" : {
            "type" : "string"
          },
          "s06" : {
            "type" : "string"
          },
          "s07" : {
            "type" : "string"
          },
          "s08" : {
            "type" : "string"
          },
          "s09" : {
            "type" : "string"
          },
          "s10" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_6" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_6_result"
          }
        }
      },
      "body_3" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenadressen_data"
          },
          "protokollBemerkung" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_7" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : { }
        }
      },
      "body_4" : {
        "type" : "object",
        "properties" : {
          "data" : { }
        }
      },
      "inline_response_200_8" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : { }
        }
      },
      "body_5" : {
        "type" : "object",
        "properties" : {
          "data" : { }
        }
      },
      "inline_response_200_9_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "ticketId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "benutzerId" : {
            "type" : "integer"
          },
          "art" : {
            "type" : "integer"
          },
          "beschreibung" : {
            "type" : "string"
          },
          "dauer" : {
            "type" : "integer"
          },
          "datum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "geaendertDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_9" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_9_result"
            }
          }
        }
      },
      "stammdatenaktivitaeten_data" : {
        "type" : "object",
        "properties" : {
          "ticketId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "benutzerId" : {
            "type" : "integer"
          },
          "art" : {
            "type" : "integer"
          },
          "beschreibung" : {
            "type" : "string"
          },
          "dauer" : {
            "type" : "integer"
          },
          "datum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "geaendertDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "body_6" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenaktivitaeten_data"
          }
        }
      },
      "inline_response_200_10_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "ticketId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "benutzerId" : {
            "type" : "integer"
          },
          "art" : {
            "type" : "integer"
          },
          "beschreibung" : {
            "type" : "string"
          },
          "dauer" : {
            "type" : "integer"
          },
          "datum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "geaendertDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_10" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_10_result"
          }
        }
      },
      "body_7" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenaktivitaeten_data"
          }
        }
      },
      "inline_response_200_11_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "anrede" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "telefon" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_11" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_11_result"
            }
          }
        }
      },
      "stammdatenansprechpartner_data_newsletterAbos" : {
        "type" : "object",
        "properties" : {
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "newsletterId" : {
            "type" : "integer"
          },
          "angemeldetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "optInVersendetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "optInBeantwortetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "abgemeldetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "hash" : {
            "type" : "string"
          }
        }
      },
      "stammdatenansprechpartner_data" : {
        "type" : "object",
        "properties" : {
          "adresseId" : {
            "type" : "integer"
          },
          "anrede" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "position" : {
            "type" : "string"
          },
          "telefon" : {
            "type" : "string"
          },
          "mobil" : {
            "type" : "string"
          },
          "fax" : {
            "type" : "string"
          },
          "privat" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "newsletterAbos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/stammdatenansprechpartner_data_newsletterAbos"
            }
          }
        }
      },
      "body_8" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenansprechpartner_data"
          }
        }
      },
      "inline_response_200_12_result_newsletterAbos" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "newsletterId" : {
            "type" : "integer"
          },
          "angemeldetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "optInVersendetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "optInBeantwortetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "abgemeldetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "hash" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_12_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "anrede" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "position" : {
            "type" : "string"
          },
          "telefon" : {
            "type" : "string"
          },
          "mobil" : {
            "type" : "string"
          },
          "fax" : {
            "type" : "string"
          },
          "privat" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "newsletterAbos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_12_result_newsletterAbos"
            }
          }
        }
      },
      "inline_response_200_12" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_12_result"
          }
        }
      },
      "body_9" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenansprechpartner_data"
          }
        }
      },
      "inline_response_200_13_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "newsletterId" : {
            "type" : "integer"
          },
          "angemeldetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "optInVersendetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "optInBeantwortetDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "abgemeldetDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_13" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_13_result"
            }
          }
        }
      },
      "body_10" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenansprechpartner_data_newsletterAbos"
          }
        }
      },
      "inline_response_200_14" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_12_result_newsletterAbos"
          }
        }
      },
      "body_11" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenansprechpartner_data_newsletterAbos"
          }
        }
      },
      "inline_response_200_15_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "artikelnummer" : {
            "type" : "string"
          },
          "artikelart" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "warengruppeId" : {
            "type" : "integer"
          },
          "gesperrt" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_15" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_15_result"
            }
          }
        }
      },
      "stammdatenartikel_data_eans" : {
        "type" : "object",
        "properties" : {
          "artikelId" : {
            "type" : "integer"
          },
          "position" : {
            "type" : "integer"
          },
          "ean" : {
            "type" : "string"
          },
          "eanUid" : {
            "type" : "integer"
          },
          "beschreibung" : {
            "type" : "string"
          }
        }
      },
      "stammdatenartikel_data" : {
        "type" : "object",
        "properties" : {
          "artikelnummer" : {
            "type" : "string"
          },
          "artikelart" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "artikeltext" : {
            "type" : "string"
          },
          "mengeneinheit" : {
            "type" : "string"
          },
          "istSeriennummernArtikel" : {
            "type" : "boolean"
          },
          "istChargenArtikel" : {
            "type" : "boolean"
          },
          "gewicht" : {
            "type" : "number"
          },
          "vkNetto" : {
            "type" : "number"
          },
          "vkBrutto" : {
            "type" : "number"
          },
          "vkBauteil" : {
            "type" : "number"
          },
          "preiseinheit" : {
            "type" : "integer"
          },
          "warengruppeId" : {
            "type" : "integer"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "eans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/stammdatenartikel_data_eans"
            }
          }
        }
      },
      "body_12" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenartikel_data"
          }
        }
      },
      "inline_response_200_16_result_eans" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "position" : {
            "type" : "integer"
          },
          "ean" : {
            "type" : "string"
          },
          "eanUid" : {
            "type" : "integer"
          },
          "beschreibung" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_16_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "artikelnummer" : {
            "type" : "string"
          },
          "artikelart" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "artikeltext" : {
            "type" : "string"
          },
          "mengeneinheit" : {
            "type" : "string"
          },
          "istSeriennummernArtikel" : {
            "type" : "boolean"
          },
          "istChargenArtikel" : {
            "type" : "boolean"
          },
          "gewicht" : {
            "type" : "number"
          },
          "vkNetto" : {
            "type" : "number"
          },
          "vkBrutto" : {
            "type" : "number"
          },
          "vkBauteil" : {
            "type" : "number"
          },
          "preiseinheit" : {
            "type" : "integer"
          },
          "warengruppeId" : {
            "type" : "integer"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "eans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_16_result_eans"
            }
          }
        }
      },
      "inline_response_200_16" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_16_result"
          }
        }
      },
      "stammdatenartikelartikel_id_data" : {
        "type" : "object",
        "properties" : {
          "bezeichnung" : {
            "type" : "string"
          },
          "artikeltext" : {
            "type" : "string"
          },
          "mengeneinheit" : {
            "type" : "string"
          },
          "istSeriennummernArtikel" : {
            "type" : "boolean"
          },
          "istChargenArtikel" : {
            "type" : "boolean"
          },
          "gewicht" : {
            "type" : "number"
          },
          "vkNetto" : {
            "type" : "number"
          },
          "vkBrutto" : {
            "type" : "number"
          },
          "vkBauteil" : {
            "type" : "number"
          },
          "preiseinheit" : {
            "type" : "integer"
          },
          "warengruppeId" : {
            "type" : "integer"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "eans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/stammdatenartikel_data_eans"
            }
          }
        }
      },
      "body_13" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenartikelartikel_id_data"
          }
        }
      },
      "inline_response_200_17_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "assetnummer" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "seriennummer" : {
            "type" : "string"
          },
          "imei" : {
            "type" : "string"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "istAktiv" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_17" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_17_result"
            }
          }
        }
      },
      "stammdatenassets_data" : {
        "type" : "object",
        "properties" : {
          "assetnummer" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "seriennummer" : {
            "type" : "string"
          },
          "imei" : {
            "type" : "string"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "istAktiv" : {
            "type" : "boolean"
          }
        }
      },
      "body_14" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenassets_data"
          }
        }
      },
      "inline_response_200_18" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_17_result"
          }
        }
      },
      "body_15" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenassets_data"
          }
        }
      },
      "inline_response_200_19_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "belegart" : {
            "type" : "string"
          },
          "belegtyp" : {
            "type" : "string"
          },
          "istAktiv" : {
            "type" : "boolean"
          },
          "anzeige" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_19" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_19_result"
            }
          }
        }
      },
      "inline_response_200_20" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_19_result"
          }
        }
      },
      "inline_response_200_21_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "belegtyp" : {
            "type" : "string"
          },
          "belegart" : {
            "type" : "string"
          },
          "belegnummer" : {
            "type" : "string"
          },
          "belegdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "belegstatus" : {
            "type" : "string"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "betragNetto" : {
            "type" : "number"
          }
        }
      },
      "inline_response_200_21" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_21_result"
            }
          }
        }
      },
      "stammdatenbelege_data_hauptadresse" : {
        "type" : "object",
        "properties" : {
          "anrede" : {
            "type" : "string"
          },
          "name1" : {
            "type" : "string"
          },
          "name2" : {
            "type" : "string"
          },
          "name3" : {
            "type" : "string"
          },
          "lkz" : {
            "type" : "string"
          },
          "land" : {
            "type" : "string"
          },
          "plz" : {
            "type" : "string"
          },
          "ort" : {
            "type" : "string"
          },
          "strasse" : {
            "type" : "string"
          },
          "telefon" : {
            "type" : "string"
          },
          "fax" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "anredeAnsprechpartner" : {
            "type" : "string"
          },
          "ansprechpartner" : {
            "type" : "string"
          }
        }
      },
      "stammdatenbelege_data_positionen" : {
        "type" : "object",
        "properties" : {
          "positionsArt" : {
            "type" : "string"
          },
          "menge" : {
            "type" : "number"
          },
          "geliefert" : {
            "type" : "number"
          },
          "mengeneinheit" : {
            "type" : "string"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "langtext" : {
            "type" : "string"
          },
          "gewicht" : {
            "type" : "number"
          },
          "einzelpreis" : {
            "type" : "number"
          },
          "einzelpreisBrutto" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt2" : {
            "type" : "number"
          },
          "rabatt" : {
            "type" : "number"
          },
          "gesamtpreis" : {
            "type" : "number"
          },
          "mwstBetrag" : {
            "type" : "number"
          },
          "gesamtpreisBrutto" : {
            "type" : "number"
          },
          "endpreis" : {
            "type" : "number"
          },
          "fixTermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eilzuschlag" : {
            "type" : "number"
          },
          "eilzuschlagBrutto" : {
            "type" : "number"
          },
          "versicherung" : {
            "type" : "number"
          },
          "versicherungBrutto" : {
            "type" : "number"
          }
        }
      },
      "stammdatenbelege_data" : {
        "type" : "object",
        "properties" : {
          "belegart" : {
            "type" : "string"
          },
          "belegdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "kundennummer" : {
            "type" : "string"
          },
          "fixdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "gewicht" : {
            "type" : "number"
          },
          "anzahlPakete" : {
            "type" : "integer"
          },
          "betragNetto" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt1Betrag" : {
            "type" : "number"
          },
          "rabatt1Text" : {
            "type" : "string"
          },
          "rabatt2" : {
            "type" : "number"
          },
          "rabatt2Betrag" : {
            "type" : "number"
          },
          "rabatt2Text" : {
            "type" : "string"
          },
          "frachtkosten" : {
            "type" : "number"
          },
          "eilzuschlagNetto" : {
            "type" : "number"
          },
          "eilzuschlagBrutto" : {
            "type" : "number"
          },
          "waehrung" : {
            "type" : "string"
          },
          "waehrungkurs" : {
            "type" : "number"
          },
          "valuta" : {
            "type" : "string",
            "format" : "date-time"
          },
          "zahlungsart" : {
            "type" : "string"
          },
          "lieferbedingung" : {
            "type" : "string"
          },
          "zahlbetrag" : {
            "type" : "number"
          },
          "rueckgeld" : {
            "type" : "number"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "frachtkostenBrutto" : {
            "type" : "number"
          },
          "freigabe" : {
            "type" : "boolean"
          },
          "nachnahme" : {
            "type" : "number"
          },
          "nachnahmeBrutto" : {
            "type" : "number"
          },
          "versicherung" : {
            "type" : "number"
          },
          "vorkasse" : {
            "type" : "boolean"
          },
          "liefertermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "eigeneBemerkung" : {
            "type" : "string"
          },
          "skonto" : {
            "type" : "number"
          },
          "skontoTage" : {
            "type" : "integer"
          },
          "skontoFaellig" : {
            "type" : "string",
            "format" : "date-time"
          },
          "skontoBetrag" : {
            "type" : "number"
          },
          "nettoTage" : {
            "type" : "integer"
          },
          "nettoFaellig" : {
            "type" : "string",
            "format" : "date-time"
          },
          "filialeId" : {
            "type" : "integer"
          },
          "externeReferenz" : {
            "type" : "string"
          },
          "betreff" : {
            "type" : "string"
          },
          "lieferterminBemerkung" : {
            "type" : "string"
          },
          "bestelltVon" : {
            "type" : "string"
          },
          "bestelltAm" : {
            "type" : "string",
            "format" : "date-time"
          },
          "projekt" : {
            "type" : "string"
          },
          "hauptadresse" : {
            "$ref" : "#/components/schemas/stammdatenbelege_data_hauptadresse"
          },
          "rechnungsadresse" : {
            "$ref" : "#/components/schemas/stammdatenbelege_data_hauptadresse"
          },
          "lieferadresse" : {
            "$ref" : "#/components/schemas/stammdatenbelege_data_hauptadresse"
          },
          "positionen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/stammdatenbelege_data_positionen"
            }
          }
        }
      },
      "body_16" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenbelege_data"
          },
          "lagerkreisId" : {
            "type" : "integer"
          },
          "lagerId" : {
            "type" : "integer"
          },
          "verfuegbarkeitPruefen" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_22_result_hauptadresse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "anrede" : {
            "type" : "string"
          },
          "name1" : {
            "type" : "string"
          },
          "name2" : {
            "type" : "string"
          },
          "name3" : {
            "type" : "string"
          },
          "lkz" : {
            "type" : "string"
          },
          "land" : {
            "type" : "string"
          },
          "plz" : {
            "type" : "string"
          },
          "ort" : {
            "type" : "string"
          },
          "strasse" : {
            "type" : "string"
          },
          "telefon" : {
            "type" : "string"
          },
          "fax" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "anredeAnsprechpartner" : {
            "type" : "string"
          },
          "ansprechpartner" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_22_result_positionen" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "position" : {
            "type" : "integer"
          },
          "positionsArt" : {
            "type" : "string"
          },
          "menge" : {
            "type" : "number"
          },
          "geliefert" : {
            "type" : "number"
          },
          "mengeneinheit" : {
            "type" : "string"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "artikelnummer" : {
            "type" : "string"
          },
          "artikelart" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "langtext" : {
            "type" : "string"
          },
          "gewicht" : {
            "type" : "number"
          },
          "einzelpreis" : {
            "type" : "number"
          },
          "einzelpreisBrutto" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt2" : {
            "type" : "number"
          },
          "rabatt" : {
            "type" : "number"
          },
          "gesamtpreis" : {
            "type" : "number"
          },
          "mwstBetrag" : {
            "type" : "number"
          },
          "gesamtpreisBrutto" : {
            "type" : "number"
          },
          "endpreis" : {
            "type" : "number"
          },
          "fixTermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eilzuschlag" : {
            "type" : "number"
          },
          "eilzuschlagBrutto" : {
            "type" : "number"
          },
          "versicherung" : {
            "type" : "number"
          },
          "versicherungBrutto" : {
            "type" : "number"
          }
        }
      },
      "inline_response_200_22_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "belegtyp" : {
            "type" : "string"
          },
          "belegart" : {
            "type" : "string"
          },
          "belegnummer" : {
            "type" : "string"
          },
          "belegdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "belegstatus" : {
            "type" : "string"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "kundennummer" : {
            "type" : "string"
          },
          "fixdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "gewicht" : {
            "type" : "number"
          },
          "anzahlPakete" : {
            "type" : "integer"
          },
          "betragNetto" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt1Betrag" : {
            "type" : "number"
          },
          "rabatt1Text" : {
            "type" : "string"
          },
          "rabatt2" : {
            "type" : "number"
          },
          "rabatt2Betrag" : {
            "type" : "number"
          },
          "rabatt2Text" : {
            "type" : "string"
          },
          "frachtkosten" : {
            "type" : "number"
          },
          "eilzuschlagNetto" : {
            "type" : "number"
          },
          "eilzuschlagBrutto" : {
            "type" : "number"
          },
          "waehrung" : {
            "type" : "string"
          },
          "waehrungkurs" : {
            "type" : "number"
          },
          "mwstProzent1" : {
            "type" : "number"
          },
          "mwstBetrag1" : {
            "type" : "number"
          },
          "mwstProzent2" : {
            "type" : "number"
          },
          "mwstBetrag2" : {
            "type" : "number"
          },
          "mwstProzent3" : {
            "type" : "number"
          },
          "mwstBetrag3" : {
            "type" : "number"
          },
          "betragBrutto" : {
            "type" : "number"
          },
          "valuta" : {
            "type" : "string",
            "format" : "date-time"
          },
          "zahlungsart" : {
            "type" : "string"
          },
          "lieferbedingung" : {
            "type" : "string"
          },
          "zahlbetrag" : {
            "type" : "number"
          },
          "rueckgeld" : {
            "type" : "number"
          },
          "quittungsnummer" : {
            "type" : "integer"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "frachtkostenBrutto" : {
            "type" : "number"
          },
          "freigabe" : {
            "type" : "boolean"
          },
          "nachnahme" : {
            "type" : "number"
          },
          "nachnahmeBrutto" : {
            "type" : "number"
          },
          "versicherung" : {
            "type" : "number"
          },
          "vorkasse" : {
            "type" : "boolean"
          },
          "liefertermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "eigeneBemerkung" : {
            "type" : "string"
          },
          "skonto" : {
            "type" : "number"
          },
          "skontoTage" : {
            "type" : "integer"
          },
          "skontoFaellig" : {
            "type" : "string",
            "format" : "date-time"
          },
          "skontoBetrag" : {
            "type" : "number"
          },
          "nettoTage" : {
            "type" : "integer"
          },
          "nettoFaellig" : {
            "type" : "string",
            "format" : "date-time"
          },
          "filialeId" : {
            "type" : "integer"
          },
          "externeReferenz" : {
            "type" : "string"
          },
          "betreff" : {
            "type" : "string"
          },
          "lieferterminBemerkung" : {
            "type" : "string"
          },
          "bestelltVon" : {
            "type" : "string"
          },
          "bestelltAm" : {
            "type" : "string",
            "format" : "date-time"
          },
          "projekt" : {
            "type" : "string"
          },
          "hauptadresse" : {
            "$ref" : "#/components/schemas/inline_response_200_22_result_hauptadresse"
          },
          "rechnungsadresse" : {
            "$ref" : "#/components/schemas/inline_response_200_22_result_hauptadresse"
          },
          "lieferadresse" : {
            "$ref" : "#/components/schemas/inline_response_200_22_result_hauptadresse"
          },
          "positionen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_22_result_positionen"
            }
          }
        }
      },
      "inline_response_200_22" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_22_result"
          }
        }
      },
      "stammdatenbelegebelege_id_data_positionen" : {
        "type" : "object",
        "properties" : {
          "menge" : {
            "type" : "number"
          },
          "geliefert" : {
            "type" : "number"
          },
          "mengeneinheit" : {
            "type" : "string"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "langtext" : {
            "type" : "string"
          },
          "gewicht" : {
            "type" : "number"
          },
          "einzelpreis" : {
            "type" : "number"
          },
          "einzelpreisBrutto" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt2" : {
            "type" : "number"
          },
          "rabatt" : {
            "type" : "number"
          },
          "gesamtpreis" : {
            "type" : "number"
          },
          "mwstBetrag" : {
            "type" : "number"
          },
          "gesamtpreisBrutto" : {
            "type" : "number"
          },
          "endpreis" : {
            "type" : "number"
          },
          "fixTermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "eilzuschlag" : {
            "type" : "number"
          },
          "eilzuschlagBrutto" : {
            "type" : "number"
          },
          "versicherung" : {
            "type" : "number"
          },
          "versicherungBrutto" : {
            "type" : "number"
          }
        }
      },
      "stammdatenbelegebelege_id_data" : {
        "type" : "object",
        "properties" : {
          "belegdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "kundennummer" : {
            "type" : "string"
          },
          "fixdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "gewicht" : {
            "type" : "number"
          },
          "anzahlPakete" : {
            "type" : "integer"
          },
          "betragNetto" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt1Betrag" : {
            "type" : "number"
          },
          "rabatt1Text" : {
            "type" : "string"
          },
          "rabatt2" : {
            "type" : "number"
          },
          "rabatt2Betrag" : {
            "type" : "number"
          },
          "rabatt2Text" : {
            "type" : "string"
          },
          "frachtkosten" : {
            "type" : "number"
          },
          "eilzuschlagNetto" : {
            "type" : "number"
          },
          "eilzuschlagBrutto" : {
            "type" : "number"
          },
          "waehrung" : {
            "type" : "string"
          },
          "waehrungkurs" : {
            "type" : "number"
          },
          "valuta" : {
            "type" : "string",
            "format" : "date-time"
          },
          "zahlungsart" : {
            "type" : "string"
          },
          "lieferbedingung" : {
            "type" : "string"
          },
          "zahlbetrag" : {
            "type" : "number"
          },
          "rueckgeld" : {
            "type" : "number"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "frachtkostenBrutto" : {
            "type" : "number"
          },
          "freigabe" : {
            "type" : "boolean"
          },
          "nachnahme" : {
            "type" : "number"
          },
          "nachnahmeBrutto" : {
            "type" : "number"
          },
          "versicherung" : {
            "type" : "number"
          },
          "vorkasse" : {
            "type" : "boolean"
          },
          "liefertermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "eigeneBemerkung" : {
            "type" : "string"
          },
          "skonto" : {
            "type" : "number"
          },
          "skontoTage" : {
            "type" : "integer"
          },
          "skontoFaellig" : {
            "type" : "string",
            "format" : "date-time"
          },
          "skontoBetrag" : {
            "type" : "number"
          },
          "nettoTage" : {
            "type" : "integer"
          },
          "nettoFaellig" : {
            "type" : "string",
            "format" : "date-time"
          },
          "filialeId" : {
            "type" : "integer"
          },
          "externeReferenz" : {
            "type" : "string"
          },
          "betreff" : {
            "type" : "string"
          },
          "lieferterminBemerkung" : {
            "type" : "string"
          },
          "bestelltVon" : {
            "type" : "string"
          },
          "bestelltAm" : {
            "type" : "string",
            "format" : "date-time"
          },
          "projekt" : {
            "type" : "string"
          },
          "hauptadresse" : {
            "$ref" : "#/components/schemas/stammdatenbelege_data_hauptadresse"
          },
          "rechnungsadresse" : {
            "$ref" : "#/components/schemas/stammdatenbelege_data_hauptadresse"
          },
          "lieferadresse" : {
            "$ref" : "#/components/schemas/stammdatenbelege_data_hauptadresse"
          },
          "positionen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/stammdatenbelegebelege_id_data_positionen"
            }
          }
        }
      },
      "body_17" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenbelegebelege_id_data"
          },
          "positionenLoeschen" : {
            "$ref" : "#/components/schemas/stammdatenbelegebelege_id_data"
          }
        }
      },
      "inline_response_200_23_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "art" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_23" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_23_result"
            }
          }
        }
      },
      "inline_response_200_24_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "art" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          },
          "betragBrutto" : {
            "type" : "number"
          }
        }
      },
      "inline_response_200_24" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_24_result"
          }
        }
      },
      "body_18" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenbelege_data"
          },
          "lagerkreisId" : {
            "type" : "integer"
          },
          "lagerId" : {
            "type" : "integer"
          },
          "verfuegbarkeitPruefen" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_25" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/stammdatenbelege_data"
          }
        }
      },
      "inline_response_200_26_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "kuerzel" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "apiZugriff" : {
            "type" : "boolean"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "geaendertDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_26" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_26_result"
            }
          }
        }
      },
      "inline_response_200_27_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "kuerzel" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "technikerId" : {
            "type" : "integer"
          },
          "vertreterId" : {
            "type" : "integer"
          },
          "vertreter" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "apiZugriff" : {
            "type" : "boolean"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "geaendertDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_27" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_27_result"
          }
        }
      },
      "inline_response_200_28_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "lagerId" : {
            "type" : "integer"
          },
          "lagerkreisId" : {
            "type" : "integer"
          },
          "bestand" : {
            "type" : "number"
          },
          "reserviert" : {
            "type" : "number"
          },
          "blockiert" : {
            "type" : "number"
          },
          "bestellt" : {
            "type" : "number"
          },
          "inUmlagerung" : {
            "type" : "number"
          },
          "inKommissionierung" : {
            "type" : "number"
          },
          "inProduktion" : {
            "type" : "number"
          }
        }
      },
      "inline_response_200_28" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_28_result"
            }
          }
        }
      },
      "inline_response_200_29" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_28_result"
          }
        }
      },
      "stammdatenbestellungen_data_positionen" : {
        "type" : "object",
        "properties" : {
          "position" : {
            "type" : "integer"
          },
          "positionsart" : {
            "type" : "string"
          },
          "menge" : {
            "type" : "number"
          },
          "bestellt" : {
            "type" : "number"
          },
          "mengeneinheit" : {
            "type" : "string"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "artikelnummer" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "einzelpreis" : {
            "type" : "number"
          },
          "gesamtpreis" : {
            "type" : "number"
          },
          "rabatt" : {
            "type" : "number"
          },
          "zuschlag" : {
            "type" : "number"
          },
          "mwstBetrag" : {
            "type" : "number"
          },
          "endpreis" : {
            "type" : "number"
          },
          "endpreisbrutto" : {
            "type" : "number"
          },
          "gewicht" : {
            "type" : "number"
          },
          "liefertermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fixtermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externeReferenz" : {
            "type" : "string"
          }
        }
      },
      "stammdatenbestellungen_data" : {
        "type" : "object",
        "properties" : {
          "belegart" : {
            "type" : "string"
          },
          "belegdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "externeReferenz" : {
            "type" : "string"
          },
          "frachtkosten" : {
            "type" : "number"
          },
          "eigeneBemerkung" : {
            "type" : "string"
          },
          "gewicht" : {
            "type" : "number"
          },
          "betragNetto" : {
            "type" : "number"
          },
          "betragBrutto" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt1Betrag" : {
            "type" : "number"
          },
          "rabatt1Text" : {
            "type" : "string"
          },
          "rabatt2" : {
            "type" : "number"
          },
          "rabatt2Betrag" : {
            "type" : "number"
          },
          "rabatt2Text" : {
            "type" : "string"
          },
          "mwstProzent1" : {
            "type" : "number"
          },
          "mwstBetrag1" : {
            "type" : "number"
          },
          "mwstProzent2" : {
            "type" : "number"
          },
          "mwstBetrag2" : {
            "type" : "number"
          },
          "valuta" : {
            "type" : "string",
            "format" : "date-time"
          },
          "zahlungsart" : {
            "type" : "string"
          },
          "lieferbedingung" : {
            "type" : "string"
          },
          "positionen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/stammdatenbestellungen_data_positionen"
            }
          }
        }
      },
      "body_19" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenbestellungen_data"
          },
          "lagerkreisId" : {
            "type" : "integer"
          },
          "lagerId" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200_30_result_positionen" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "position" : {
            "type" : "integer"
          },
          "positionsart" : {
            "type" : "string"
          },
          "menge" : {
            "type" : "number"
          },
          "bestellt" : {
            "type" : "number"
          },
          "mengeneinheit" : {
            "type" : "string"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "artikelnummer" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "einzelpreis" : {
            "type" : "number"
          },
          "gesamtpreis" : {
            "type" : "number"
          },
          "rabatt" : {
            "type" : "number"
          },
          "zuschlag" : {
            "type" : "number"
          },
          "mwstBetrag" : {
            "type" : "number"
          },
          "endpreis" : {
            "type" : "number"
          },
          "endpreisbrutto" : {
            "type" : "number"
          },
          "gewicht" : {
            "type" : "number"
          },
          "liefertermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fixtermin" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externeReferenz" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_30_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "belegtyp" : {
            "type" : "string"
          },
          "belegart" : {
            "type" : "string"
          },
          "belegnummer" : {
            "type" : "string"
          },
          "belegdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "belegstatus" : {
            "type" : "string"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "externeReferenz" : {
            "type" : "string"
          },
          "frachtkosten" : {
            "type" : "number"
          },
          "eigeneBemerkung" : {
            "type" : "string"
          },
          "gewicht" : {
            "type" : "number"
          },
          "betragNetto" : {
            "type" : "number"
          },
          "betragBrutto" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt1Betrag" : {
            "type" : "number"
          },
          "rabatt1Text" : {
            "type" : "string"
          },
          "rabatt2" : {
            "type" : "number"
          },
          "rabatt2Betrag" : {
            "type" : "number"
          },
          "rabatt2Text" : {
            "type" : "string"
          },
          "mwstProzent1" : {
            "type" : "number"
          },
          "mwstBetrag1" : {
            "type" : "number"
          },
          "mwstProzent2" : {
            "type" : "number"
          },
          "mwstBetrag2" : {
            "type" : "number"
          },
          "valuta" : {
            "type" : "string",
            "format" : "date-time"
          },
          "zahlungsart" : {
            "type" : "string"
          },
          "lieferbedingung" : {
            "type" : "string"
          },
          "positionen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_30_result_positionen"
            }
          }
        }
      },
      "inline_response_200_30" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_30_result"
          }
        }
      },
      "stammdatenbestellungenbestellungen_id_data" : {
        "type" : "object",
        "properties" : {
          "belegdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "gesperrt" : {
            "type" : "boolean"
          },
          "externeReferenz" : {
            "type" : "string"
          },
          "frachtkosten" : {
            "type" : "number"
          },
          "eigeneBemerkung" : {
            "type" : "string"
          },
          "gewicht" : {
            "type" : "number"
          },
          "betragNetto" : {
            "type" : "number"
          },
          "betragBrutto" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt1Betrag" : {
            "type" : "number"
          },
          "rabatt1Text" : {
            "type" : "string"
          },
          "rabatt2" : {
            "type" : "number"
          },
          "rabatt2Betrag" : {
            "type" : "number"
          },
          "rabatt2Text" : {
            "type" : "string"
          },
          "mwstProzent1" : {
            "type" : "number"
          },
          "mwstBetrag1" : {
            "type" : "number"
          },
          "mwstProzent2" : {
            "type" : "number"
          },
          "mwstBetrag2" : {
            "type" : "number"
          },
          "valuta" : {
            "type" : "string",
            "format" : "date-time"
          },
          "zahlungsart" : {
            "type" : "string"
          },
          "lieferbedingung" : {
            "type" : "string"
          },
          "positionen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/stammdatenbestellungen_data_positionen"
            }
          }
        }
      },
      "body_20" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenbestellungenbestellungen_id_data"
          },
          "positionenLoeschen" : {
            "$ref" : "#/components/schemas/stammdatenbestellungenbestellungen_id_data"
          }
        }
      },
      "inline_response_200_31_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "bildindex" : {
            "type" : "integer"
          },
          "dateiname" : {
            "type" : "string"
          },
          "externeReferenz" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200_31" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_31_result"
            }
          }
        }
      },
      "inline_response_200_32_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "bildindex" : {
            "type" : "integer"
          },
          "dateiname" : {
            "type" : "string"
          },
          "externeReferenz" : {
            "type" : "string"
          },
          "gfx" : {
            "type" : "string",
            "format" : "byte"
          },
          "version" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200_32" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_32_result"
          }
        }
      },
      "inline_response_200_33_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "warengruppeId" : {
            "type" : "integer"
          },
          "benutzerId" : {
            "type" : "integer"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "chance" : {
            "type" : "integer"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "phase" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "produkt" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_33" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_33_result"
            }
          }
        }
      },
      "stammdatenchancen_data" : {
        "type" : "object",
        "properties" : {
          "adresseId" : {
            "type" : "integer"
          },
          "warengruppeId" : {
            "type" : "integer"
          },
          "benutzerId" : {
            "type" : "integer"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "investitionsDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "investitionsSumme" : {
            "type" : "number"
          },
          "chance" : {
            "type" : "integer"
          },
          "chanceStatus" : {
            "type" : "integer"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "phase" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "produkt" : {
            "type" : "string"
          }
        }
      },
      "body_21" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenchancen_data"
          }
        }
      },
      "inline_response_200_34_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "warengruppeId" : {
            "type" : "integer"
          },
          "benutzerId" : {
            "type" : "integer"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "investitionsDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "investitionsSumme" : {
            "type" : "number"
          },
          "chance" : {
            "type" : "integer"
          },
          "chanceStatus" : {
            "type" : "integer"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "phase" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "produkt" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_34" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_34_result"
          }
        }
      },
      "body_22" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenchancen_data"
          }
        }
      },
      "inline_response_200_35_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "ticketId" : {
            "type" : "integer"
          },
          "betreff" : {
            "type" : "string"
          },
          "dateiname" : {
            "type" : "string"
          },
          "datum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_35" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_35_result"
            }
          }
        }
      },
      "stammdatendateien_data" : {
        "type" : "object",
        "properties" : {
          "adresseId" : {
            "type" : "integer"
          },
          "belegId" : {
            "type" : "integer"
          },
          "bestellungId" : {
            "type" : "integer"
          },
          "projektId" : {
            "type" : "integer"
          },
          "dealId" : {
            "type" : "integer"
          },
          "ticketId" : {
            "type" : "integer"
          },
          "betreff" : {
            "type" : "string"
          },
          "dateiname" : {
            "type" : "string"
          },
          "datum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "istEmail" : {
            "type" : "boolean"
          },
          "daten" : {
            "type" : "string",
            "format" : "byte"
          }
        }
      },
      "body_23" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatendateien_data"
          }
        }
      },
      "inline_response_200_36_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "belegId" : {
            "type" : "integer"
          },
          "bestellungId" : {
            "type" : "integer"
          },
          "projektId" : {
            "type" : "integer"
          },
          "dealId" : {
            "type" : "integer"
          },
          "ticketId" : {
            "type" : "integer"
          },
          "betreff" : {
            "type" : "string"
          },
          "dateiname" : {
            "type" : "string"
          },
          "datum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "istEmail" : {
            "type" : "boolean"
          },
          "daten" : {
            "type" : "string",
            "format" : "byte"
          }
        }
      },
      "inline_response_200_36" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_36_result"
          }
        }
      },
      "body_24" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatendateien_data"
          }
        }
      },
      "inline_response_200_37_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "titel" : {
            "type" : "string"
          },
          "chance" : {
            "type" : "integer"
          },
          "typ" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "integer"
          },
          "phase" : {
            "type" : "integer"
          },
          "zustaendigerBenutzer" : {
            "type" : "string"
          },
          "frei01" : {
            "type" : "string"
          },
          "frei02" : {
            "type" : "string"
          },
          "investitionsdatumGeplant" : {
            "type" : "string",
            "format" : "date-time"
          },
          "investitionssummeGeplant" : {
            "type" : "number"
          },
          "investitionssummeErreicht" : {
            "type" : "number"
          },
          "investitionsdatumErreicht" : {
            "type" : "string",
            "format" : "date-time"
          },
          "istArchiviert" : {
            "type" : "boolean"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "geaendertDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_37" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_37_result"
            }
          }
        }
      },
      "stammdatendeals_data" : {
        "type" : "object",
        "properties" : {
          "adresseId" : {
            "type" : "integer"
          },
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "titel" : {
            "type" : "string"
          },
          "chance" : {
            "type" : "integer"
          },
          "typ" : {
            "type" : "integer"
          },
          "notiz" : {
            "type" : "string"
          },
          "zustaendigerBenutzer" : {
            "type" : "string"
          },
          "frei01" : {
            "type" : "string"
          },
          "frei02" : {
            "type" : "string"
          },
          "investitionsdatumGeplant" : {
            "type" : "string",
            "format" : "date-time"
          },
          "istArchiviert" : {
            "type" : "boolean"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "geaendertDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "body_25" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatendeals_data"
          }
        }
      },
      "inline_response_200_38_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "ansprechpartnerId" : {
            "type" : "integer"
          },
          "titel" : {
            "type" : "string"
          },
          "chance" : {
            "type" : "integer"
          },
          "typ" : {
            "type" : "integer"
          },
          "notiz" : {
            "type" : "string"
          },
          "status" : {
            "type" : "integer"
          },
          "phase" : {
            "type" : "integer"
          },
          "zustaendigerBenutzer" : {
            "type" : "string"
          },
          "frei01" : {
            "type" : "string"
          },
          "frei02" : {
            "type" : "string"
          },
          "investitionsdatumGeplant" : {
            "type" : "string",
            "format" : "date-time"
          },
          "investitionssummeGeplant" : {
            "type" : "number"
          },
          "investitionssummeErreicht" : {
            "type" : "number"
          },
          "investitionsdatumErreicht" : {
            "type" : "string",
            "format" : "date-time"
          },
          "istArchiviert" : {
            "type" : "boolean"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "geaendertDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_38" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_38_result"
          }
        }
      },
      "body_26" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatendeals_data"
          }
        }
      },
      "inline_response_200_39_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "lagerkreisId" : {
            "type" : "integer"
          },
          "lager" : {
            "type" : "integer"
          },
          "kurzbezeichnung" : {
            "type" : "string"
          },
          "adresseId" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200_39" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_39_result"
            }
          }
        }
      },
      "inline_response_200_40" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_39_result"
          }
        }
      },
      "inline_response_200_41_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "lieferungAdresseId" : {
            "type" : "integer"
          },
          "rechnungAdresseId" : {
            "type" : "integer"
          },
          "eingangLagerId" : {
            "type" : "integer"
          },
          "ausgangLagerId" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200_41" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_41_result"
            }
          }
        }
      },
      "inline_response_200_42" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_41_result"
          }
        }
      },
      "inline_response_200_43_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "lieferart" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_43" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_43_result"
            }
          }
        }
      },
      "inline_response_200_44" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_43_result"
          }
        }
      },
      "inline_response_200_45_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "bezeichnung" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_45" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_45_result"
            }
          }
        }
      },
      "inline_response_200_46" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_45_result"
          }
        }
      },
      "inline_response_200_47_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "opvArt" : {
            "type" : "string"
          },
          "adressnummer" : {
            "type" : "integer"
          },
          "lieferantennummer" : {
            "type" : "string"
          },
          "kundennummer" : {
            "type" : "string"
          },
          "rechnungstyp" : {
            "type" : "string"
          },
          "rechnungsart" : {
            "type" : "string"
          },
          "rechnungsnummer" : {
            "type" : "string"
          },
          "rechnungsdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nettoFaellig" : {
            "type" : "string",
            "format" : "date-time"
          },
          "naechsteFaelligkeit" : {
            "type" : "string",
            "format" : "date-time"
          },
          "rechnungsBetrag" : {
            "type" : "number"
          },
          "offenerBetrag" : {
            "type" : "number"
          },
          "bisherGezahlt" : {
            "type" : "number"
          },
          "abgeschlossen" : {
            "type" : "boolean"
          },
          "mahnen" : {
            "type" : "boolean"
          },
          "mahnstufe" : {
            "type" : "string"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "inKlaerung" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_47" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_47_result"
            }
          }
        }
      },
      "inline_response_200_48_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "opvArt" : {
            "type" : "string"
          },
          "adressnummer" : {
            "type" : "integer"
          },
          "lieferantennummer" : {
            "type" : "string"
          },
          "kundennummer" : {
            "type" : "string"
          },
          "rechnungstyp" : {
            "type" : "string"
          },
          "rechnungsart" : {
            "type" : "string"
          },
          "rechnungsnummer" : {
            "type" : "string"
          },
          "rechnungsdatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "zahlungsart" : {
            "type" : "string"
          },
          "skonto" : {
            "type" : "number"
          },
          "valuta" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastschrift" : {
            "type" : "boolean"
          },
          "nettoFaellig" : {
            "type" : "string",
            "format" : "date-time"
          },
          "naechsteFaelligkeit" : {
            "type" : "string",
            "format" : "date-time"
          },
          "rechnungsBetrag" : {
            "type" : "number"
          },
          "offenerBetrag" : {
            "type" : "number"
          },
          "bisherGezahlt" : {
            "type" : "number"
          },
          "bezahltAm" : {
            "type" : "string",
            "format" : "date-time"
          },
          "abgeschlossen" : {
            "type" : "boolean"
          },
          "mahnen" : {
            "type" : "boolean"
          },
          "mahnstufe" : {
            "type" : "string"
          },
          "naechsteMahnung" : {
            "type" : "string",
            "format" : "date-time"
          },
          "mahngebuehr" : {
            "type" : "boolean"
          },
          "mahnzinsen" : {
            "type" : "boolean"
          },
          "gebuehr" : {
            "type" : "number"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "inKlaerung" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_48" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_48_result"
          }
        }
      },
      "inline_response_200_49_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "zahlungsDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "zahlungsBetrag" : {
            "type" : "number"
          },
          "zahlungPer" : {
            "type" : "string"
          },
          "bemerkung" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_49" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_49_result"
            }
          }
        }
      },
      "inline_response_200_50_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "offenePostenId" : {
            "type" : "integer"
          },
          "zahlungsDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "zahlungsBetrag" : {
            "type" : "number"
          },
          "zahlungPer" : {
            "type" : "string"
          },
          "auszug" : {
            "type" : "string"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "stornoFuerZahlungId" : {
            "type" : "integer"
          },
          "externeReferenzTyp" : {
            "type" : "integer"
          },
          "externeReferenz" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_50" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_50_result"
          }
        }
      },
      "inline_response_200_51_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "warengruppeId" : {
            "type" : "integer"
          },
          "herstellerId" : {
            "type" : "integer"
          },
          "preisgruppeId" : {
            "type" : "integer"
          },
          "abMenge" : {
            "type" : "number"
          },
          "istAktionspreis" : {
            "type" : "boolean"
          },
          "gueltigVon" : {
            "type" : "string",
            "format" : "date-time"
          },
          "gueltigBis" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nettopreis" : {
            "type" : "number"
          },
          "bruttopreis" : {
            "type" : "number"
          },
          "rabatt1" : {
            "type" : "number"
          },
          "rabatt2" : {
            "type" : "number"
          }
        }
      },
      "inline_response_200_51" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_51_result"
            }
          }
        }
      },
      "inline_response_200_52" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_51_result"
          }
        }
      },
      "inline_response_200_53_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "auftragsnummer" : {
            "type" : "string"
          },
          "auftragsartId" : {
            "type" : "integer"
          },
          "abrechnungsartId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "name1" : {
            "type" : "string"
          },
          "ort" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "fertigstellungGeplantDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "aufwandGeschaetzt" : {
            "type" : "integer"
          },
          "freierStatus" : {
            "type" : "string"
          },
          "bemerkung" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_53" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_53_result"
            }
          }
        }
      },
      "stammdatenservice_data_positionen" : {
        "type" : "object",
        "properties" : {
          "position" : {
            "type" : "integer"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "artikelbezeichnung" : {
            "type" : "string"
          },
          "langtext" : {
            "type" : "string"
          },
          "menge" : {
            "type" : "number"
          },
          "mengeUmgelagert" : {
            "type" : "number"
          },
          "mengeBestaetigt" : {
            "type" : "number"
          },
          "mengeEingebaut" : {
            "type" : "number"
          },
          "mengeReserviert" : {
            "type" : "number"
          },
          "mengeRetourniert" : {
            "type" : "number"
          },
          "mengeDefektEingelagert" : {
            "type" : "number"
          },
          "umlagerungTyp" : {
            "type" : "integer"
          },
          "ek" : {
            "type" : "number"
          },
          "einzelpreis" : {
            "type" : "number"
          },
          "einzelpreisBrutto" : {
            "type" : "number"
          },
          "gesamtpreis" : {
            "type" : "number"
          },
          "gesamtpreisBrutto" : {
            "type" : "number"
          }
        }
      },
      "stammdatenservice_data" : {
        "type" : "object",
        "properties" : {
          "auftragsnummer" : {
            "type" : "string"
          },
          "auftragsartId" : {
            "type" : "integer"
          },
          "abrechnungsartId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "name1" : {
            "type" : "string"
          },
          "name2" : {
            "type" : "string"
          },
          "strasse" : {
            "type" : "string"
          },
          "lkzId" : {
            "type" : "integer"
          },
          "plz" : {
            "type" : "string"
          },
          "ort" : {
            "type" : "string"
          },
          "telefon1" : {
            "type" : "string"
          },
          "telefon2" : {
            "type" : "string"
          },
          "mobil" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "abweichendeRechnungsadresse" : {
            "type" : "boolean"
          },
          "rechnungsAdresseId" : {
            "type" : "integer"
          },
          "assetId" : {
            "type" : "integer"
          },
          "fertigstellungGeplantDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "meisterTechnikerId" : {
            "type" : "integer"
          },
          "kundenberaterBenutzerId" : {
            "type" : "integer"
          },
          "herstellerAdresseId" : {
            "type" : "integer"
          },
          "aufwandGeschaetzt" : {
            "type" : "integer"
          },
          "auftragsbeschreibung" : {
            "type" : "string"
          },
          "freierStatus" : {
            "type" : "string"
          },
          "freigabe" : {
            "type" : "boolean"
          },
          "istVorlage" : {
            "type" : "boolean"
          },
          "istIntern" : {
            "type" : "boolean"
          },
          "kostenvoranschlagBelegId" : {
            "type" : "integer"
          },
          "filialeId" : {
            "type" : "integer"
          },
          "haendlerAdresseId" : {
            "type" : "integer"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "positionen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/stammdatenservice_data_positionen"
            }
          }
        }
      },
      "body_27" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenservice_data"
          }
        }
      },
      "inline_response_200_54_result_positionen" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "position" : {
            "type" : "integer"
          },
          "artikelId" : {
            "type" : "integer"
          },
          "artikelbezeichnung" : {
            "type" : "string"
          },
          "langtext" : {
            "type" : "string"
          },
          "menge" : {
            "type" : "number"
          },
          "mengeUmgelagert" : {
            "type" : "number"
          },
          "mengeBestaetigt" : {
            "type" : "number"
          },
          "mengeEingebaut" : {
            "type" : "number"
          },
          "mengeReserviert" : {
            "type" : "number"
          },
          "mengeRetourniert" : {
            "type" : "number"
          },
          "mengeDefektEingelagert" : {
            "type" : "number"
          },
          "umlagerungTyp" : {
            "type" : "integer"
          },
          "ek" : {
            "type" : "number"
          },
          "einzelpreis" : {
            "type" : "number"
          },
          "einzelpreisBrutto" : {
            "type" : "number"
          },
          "gesamtpreis" : {
            "type" : "number"
          },
          "gesamtpreisBrutto" : {
            "type" : "number"
          }
        }
      },
      "inline_response_200_54_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "auftragsnummer" : {
            "type" : "string"
          },
          "auftragsartId" : {
            "type" : "integer"
          },
          "abrechnungsartId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "name1" : {
            "type" : "string"
          },
          "name2" : {
            "type" : "string"
          },
          "strasse" : {
            "type" : "string"
          },
          "lkzId" : {
            "type" : "integer"
          },
          "plz" : {
            "type" : "string"
          },
          "ort" : {
            "type" : "string"
          },
          "telefon1" : {
            "type" : "string"
          },
          "telefon2" : {
            "type" : "string"
          },
          "mobil" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "abweichendeRechnungsadresse" : {
            "type" : "boolean"
          },
          "rechnungsAdresseId" : {
            "type" : "integer"
          },
          "assetId" : {
            "type" : "integer"
          },
          "fertigstellungGeplantDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "meisterTechnikerId" : {
            "type" : "integer"
          },
          "kundenberaterBenutzerId" : {
            "type" : "integer"
          },
          "herstellerAdresseId" : {
            "type" : "integer"
          },
          "aufwandGeschaetzt" : {
            "type" : "integer"
          },
          "auftragsbeschreibung" : {
            "type" : "string"
          },
          "freierStatus" : {
            "type" : "string"
          },
          "freigabe" : {
            "type" : "boolean"
          },
          "istVorlage" : {
            "type" : "boolean"
          },
          "istIntern" : {
            "type" : "boolean"
          },
          "kostenvoranschlagBelegId" : {
            "type" : "integer"
          },
          "filialeId" : {
            "type" : "integer"
          },
          "haendlerAdresseId" : {
            "type" : "integer"
          },
          "bemerkung" : {
            "type" : "string"
          },
          "positionen" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_54_result_positionen"
            }
          }
        }
      },
      "inline_response_200_54" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_54_result"
          }
        }
      },
      "body_28" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatenservice_data"
          }
        }
      },
      "body_29" : {
        "type" : "object",
        "properties" : {
          "bemerkung" : {
            "type" : "string"
          }
        }
      },
      "body_30" : {
        "type" : "object",
        "properties" : {
          "bemerkung" : {
            "type" : "string"
          }
        }
      },
      "body_31" : {
        "type" : "object",
        "properties" : {
          "bemerkung" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_55_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "abrechnung" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200_55" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_55_result"
            }
          }
        }
      },
      "inline_response_200_56" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_55_result"
          }
        }
      },
      "inline_response_200_57_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "istStandard" : {
            "type" : "boolean"
          },
          "istIntern" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_57" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_57_result"
            }
          }
        }
      },
      "inline_response_200_58_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "istStandard" : {
            "type" : "boolean"
          },
          "istIntern" : {
            "type" : "boolean"
          },
          "zahlungsartId" : {
            "type" : "integer"
          },
          "aufschlagArtikelId" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200_58" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_58_result"
          }
        }
      },
      "inline_response_200_59_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "techniker" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_59" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_59_result"
            }
          }
        }
      },
      "stammdatentechniker_data" : {
        "type" : "object",
        "properties" : {
          "techniker" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "bemerkung1" : {
            "type" : "string"
          },
          "bemerkung2" : {
            "type" : "string"
          },
          "bemerkung3" : {
            "type" : "string"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "lagerId" : {
            "type" : "integer"
          },
          "kostenstelle" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          }
        }
      },
      "body_32" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatentechniker_data"
          }
        }
      },
      "inline_response_200_60_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "techniker" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "bemerkung1" : {
            "type" : "string"
          },
          "bemerkung2" : {
            "type" : "string"
          },
          "bemerkung3" : {
            "type" : "string"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "lagerId" : {
            "type" : "integer"
          },
          "kostenstelle" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_60" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_60_result"
          }
        }
      },
      "body_33" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatentechniker_data"
          }
        }
      },
      "inline_response_200_61_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "serviceId" : {
            "type" : "integer"
          },
          "technikerId" : {
            "type" : "integer"
          },
          "titel" : {
            "type" : "string"
          },
          "beginnDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endeDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_61" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_61_result"
            }
          }
        }
      },
      "stammdatentermine_data" : {
        "type" : "object",
        "properties" : {
          "serviceId" : {
            "type" : "integer"
          },
          "technikerId" : {
            "type" : "integer"
          },
          "titel" : {
            "type" : "string"
          },
          "beginnDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endeDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reisebeginnDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vorOrtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fahrstrecke" : {
            "type" : "integer"
          },
          "erledigtDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "body_34" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatentermine_data"
          }
        }
      },
      "inline_response_200_62_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "serviceId" : {
            "type" : "integer"
          },
          "technikerId" : {
            "type" : "integer"
          },
          "titel" : {
            "type" : "string"
          },
          "beginnDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endeDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "angenommenDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reisebeginnDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vorOrtDatum" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fahrstrecke" : {
            "type" : "integer"
          },
          "erledigtDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_62" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_62_result"
          }
        }
      },
      "body_35" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatentermine_data"
          }
        }
      },
      "body_36" : {
        "type" : "object",
        "properties" : {
          "bemerkung" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_63_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "ticketNummer" : {
            "type" : "string"
          },
          "hauptTicketId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "betreff" : {
            "type" : "string"
          },
          "art" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "integer"
          },
          "prioritaet" : {
            "type" : "string"
          },
          "verantwortlichBenutzerId" : {
            "type" : "integer"
          },
          "angefordertVonBenutzerId" : {
            "type" : "integer"
          },
          "zugeordnetBenutzerId" : {
            "type" : "integer"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_63" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_63_result"
            }
          }
        }
      },
      "stammdatentickets_data" : {
        "type" : "object",
        "properties" : {
          "ticketNummer" : {
            "type" : "string"
          },
          "hauptTicketId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "betreff" : {
            "type" : "string"
          },
          "art" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "integer"
          },
          "rolle" : {
            "type" : "integer"
          },
          "freiS01" : {
            "type" : "string"
          },
          "freiS02" : {
            "type" : "string"
          },
          "prioritaet" : {
            "type" : "string"
          },
          "beschreibung" : {
            "type" : "string"
          },
          "verantwortlichBenutzerId" : {
            "type" : "integer"
          },
          "angefordertVonBenutzerId" : {
            "type" : "integer"
          },
          "zugeordnetBenutzerId" : {
            "type" : "integer"
          },
          "rueckfrageAnBenutzerId" : {
            "type" : "integer"
          },
          "nachErledigungZurueckAnBenutzerId" : {
            "type" : "integer"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "body_37" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatentickets_data"
          }
        }
      },
      "inline_response_200_64_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "ticketNummer" : {
            "type" : "string"
          },
          "hauptTicketId" : {
            "type" : "integer"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "betreff" : {
            "type" : "string"
          },
          "art" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "integer"
          },
          "rolle" : {
            "type" : "integer"
          },
          "freiS01" : {
            "type" : "string"
          },
          "freiS02" : {
            "type" : "string"
          },
          "prioritaet" : {
            "type" : "string"
          },
          "beschreibung" : {
            "type" : "string"
          },
          "verantwortlichBenutzerId" : {
            "type" : "integer"
          },
          "angefordertVonBenutzerId" : {
            "type" : "integer"
          },
          "zugeordnetBenutzerId" : {
            "type" : "integer"
          },
          "rueckfrageAnBenutzerId" : {
            "type" : "integer"
          },
          "nachErledigungZurueckAnBenutzerId" : {
            "type" : "integer"
          },
          "angelegtDatum" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "inline_response_200_64" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_64_result"
          }
        }
      },
      "body_38" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatentickets_data"
          }
        }
      },
      "body_39" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatendateien_data"
          }
        }
      },
      "body_40" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/stammdatendateien_data"
          }
        }
      },
      "inline_response_200_65_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "vertreternummer" : {
            "type" : "string"
          },
          "adresseId" : {
            "type" : "integer"
          },
          "istAktiv" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_65" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_65_result"
            }
          }
        }
      },
      "inline_response_200_66" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_65_result"
          }
        }
      },
      "inline_response_200_67_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "warengruppe" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_67" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_67_result"
            }
          }
        }
      },
      "inline_response_200_68" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_67_result"
          }
        }
      },
      "inline_response_200_69_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "zahlungsart" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "gesperrt" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_69" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_69_result"
            }
          }
        }
      },
      "inline_response_200_70_result" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "zahlungsart" : {
            "type" : "string"
          },
          "bezeichnung" : {
            "type" : "string"
          },
          "skonto" : {
            "type" : "number"
          },
          "skontotage" : {
            "type" : "integer"
          },
          "nettotage" : {
            "type" : "integer"
          },
          "mahnen" : {
            "type" : "boolean"
          },
          "nachnahme" : {
            "type" : "boolean"
          },
          "gesperrt" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_70" : {
        "type" : "object",
        "properties" : {
          "varioUrl" : {
            "type" : "string"
          },
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_70_result"
          }
        }
      },
      "inline_response_200_71_result" : {
        "type" : "object",
        "properties" : {
          "typ" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "time" : {
            "type" : "string",
            "format" : "date-time"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_71" : {
        "type" : "object",
        "properties" : {
          "resultOffset" : {
            "type" : "integer"
          },
          "resultCount" : {
            "type" : "integer"
          },
          "totalResultCount" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_71_result"
            }
          }
        }
      },
      "inline_response_200_72_result" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "wert" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_72" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/inline_response_200_72_result"
          }
        }
      },
      "body_41" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/inline_response_200_72_result"
          }
        }
      },
      "inline_response_200_73" : {
        "type" : "object",
        "properties" : {
          "aktiv" : {
            "type" : "boolean"
          }
        }
      },
      "body_42" : {
        "type" : "object",
        "properties" : {
          "aktiv" : {
            "type" : "boolean"
          }
        }
      }
    }
  }
}